{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Documentos\\\\projeto-software-main\\\\task_manager\\\\my-app\\\\src\\\\services\\\\api.js\";\nimport axios from 'axios';\n\n// Defina a URL base da API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8000/api'; // Altere conforme sua configuração\n\n// Criando a instância do Axios\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Adiciona o token de autenticação às requisições\nconst setAuthToken = token => {\n  if (token) {\n    api.defaults.headers['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete api.defaults.headers['Authorization'];\n  }\n};\n\n// Função para registrar um novo usuário\nexport const registerUser = async userData => {\n  try {\n    const response = await api.post('/users/register/', userData);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao registrar usuário:', error);\n    throw error;\n  }\n};\n\n// Função para fazer login e obter o token JWT\nexport const loginUser = async credentials => {\n  try {\n    const response = await api.post('/users/login/', credentials);\n    const {\n      access\n    } = response.data; // Pegando o token JWT\n    localStorage.setItem('token', access); // Salvando o token no localStorage\n    setAuthToken(access); // Configurando o token no Axios\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao fazer login:', error);\n    throw error;\n  }\n};\n\n// Função para verificar se o usuário está autenticado\nexport const isAuthenticated = () => {\n  return !!localStorage.getItem('token');\n};\n\n// Função para logout\nexport const logoutUser = () => {\n  localStorage.removeItem('token');\n  setAuthToken(null);\n};\n\n// Função para listar tarefas\nexport const getTasks = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    setAuthToken(token);\n    const response = await api.get('/tasks/');\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao buscar tarefas:', error);\n    throw error;\n  }\n};\n\n// Função para criar uma nova tarefa\nexport const createTask = async taskData => {\n  try {\n    const token = localStorage.getItem('token');\n    setAuthToken(token);\n    const response = await api.post('/tasks/', taskData);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao criar tarefa:', error);\n    throw error;\n  }\n};\n\n// Função para atualizar uma tarefa\nexport const updateTask = async (taskId, taskData) => {\n  try {\n    const token = localStorage.getItem('token');\n    setAuthToken(token);\n    const response = await api.put(`/tasks/${taskId}/`, taskData);\n    return response.data;\n  } catch (error) {\n    console.error('Erro ao atualizar tarefa:', error);\n    throw error;\n  }\n};\n\n// Função para deletar uma tarefa\nexport const deleteTask = async taskId => {\n  try {\n    const token = localStorage.getItem('token');\n    setAuthToken(token);\n    await api.delete(`/tasks/${taskId}/`);\n  } catch (error) {\n    console.error('Erro ao deletar tarefa:', error);\n    throw error;\n  }\n};\nexport default api;\nexport const TaskItem = ({\n  task,\n  onUpdate,\n  onDelete\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onUpdate(task.id),\n      children: \"Atualizar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDelete(task.id),\n      children: \"Deletar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 7\n  }, this);\n};\n_c = TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["axios","jsxDEV","_jsxDEV","API_URL","api","create","baseURL","headers","setAuthToken","token","defaults","registerUser","userData","response","post","data","error","console","loginUser","credentials","access","localStorage","setItem","isAuthenticated","getItem","logoutUser","removeItem","getTasks","get","createTask","taskData","updateTask","taskId","put","deleteTask","delete","TaskItem","task","onUpdate","onDelete","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/mathe/OneDrive/Documentos/projeto-software-main/task_manager/my-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Defina a URL base da API\r\nconst API_URL = 'http://localhost:8000/api';  // Altere conforme sua configuração\r\n\r\n// Criando a instância do Axios\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Adiciona o token de autenticação às requisições\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    api.defaults.headers['Authorization'] = `Bearer ${token}`;\r\n  } else {\r\n    delete api.defaults.headers['Authorization'];\r\n  }\r\n};\r\n\r\n// Função para registrar um novo usuário\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await api.post('/users/register/', userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro ao registrar usuário:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para fazer login e obter o token JWT\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await api.post('/users/login/', credentials);\r\n    const { access } = response.data;  // Pegando o token JWT\r\n    localStorage.setItem('token', access);  // Salvando o token no localStorage\r\n    setAuthToken(access); // Configurando o token no Axios\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro ao fazer login:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para verificar se o usuário está autenticado\r\nexport const isAuthenticated = () => {\r\n  return !!localStorage.getItem('token');\r\n};\r\n\r\n// Função para logout\r\nexport const logoutUser = () => {\r\n  localStorage.removeItem('token');\r\n  setAuthToken(null);\r\n};\r\n\r\n// Função para listar tarefas\r\nexport const getTasks = async () => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    setAuthToken(token);\r\n    const response = await api.get('/tasks/');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro ao buscar tarefas:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para criar uma nova tarefa\r\nexport const createTask = async (taskData) => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    setAuthToken(token);\r\n    const response = await api.post('/tasks/', taskData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro ao criar tarefa:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para atualizar uma tarefa\r\nexport const updateTask = async (taskId, taskData) => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    setAuthToken(token);\r\n    const response = await api.put(`/tasks/${taskId}/`, taskData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Erro ao atualizar tarefa:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para deletar uma tarefa\r\nexport const deleteTask = async (taskId) => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    setAuthToken(token);\r\n    await api.delete(`/tasks/${taskId}/`);\r\n  } catch (error) {\r\n    console.error('Erro ao deletar tarefa:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default api;\r\n\r\nexport const TaskItem = ({ task, onUpdate, onDelete }) => {\r\n    return (\r\n      <div>\r\n        <p>{task.title}</p>\r\n        <button onClick={() => onUpdate(task.id)}>Atualizar</button>\r\n        <button onClick={() => onDelete(task.id)}>Deletar</button>\r\n      </div>\r\n    );\r\n  };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}